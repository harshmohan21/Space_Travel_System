import org.springframework.batch.item.file.transform.FieldSet;
import java.sql.Date;
import java.sql.Time;
import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;

public class FieldSetUtils {

    private static final String DATE_FORMAT = "yyyy-MM-dd";
    private static final String TIME_FORMAT = "HH:mm:ss";
    private static final String TIMESTAMP_FORMAT = "yyyy-MM-dd HH:mm:ss";

    public static Object readValue(FieldSet fieldSet, String column) {
        try {
            return fieldSet.readInt(column);
        } catch (Exception e1) {
            try {
                return fieldSet.readDouble(column);
            } catch (Exception e2) {
                try {
                    return fieldSet.readBoolean(column);
                } catch (Exception e3) {
                    try {
                        return fieldSet.readDate(column, DATE_FORMAT);
                    } catch (Exception e4) {
                        try {
                            return fieldSet.readDate(column, TIME_FORMAT);
                        } catch (Exception e5) {
                            try {
                                return fieldSet.readDate(column, TIMESTAMP_FORMAT);
                            } catch (Exception e6) {
                                return fieldSet.readString(column);
                            }
                        }
                    }
                }
            }
        }
    }

    public static Date readSqlDate(FieldSet fieldSet, String column) {
        try {
            String value = fieldSet.readString(column);
            return Date.valueOf(value);
        } catch (IllegalArgumentException e) {
            return null;
        }
    }

    public static Time readSqlTime(FieldSet fieldSet, String column) {
        try {
            String value = fieldSet.readString(column);
            return Time.valueOf(value);
        } catch (IllegalArgumentException e) {
            return null;
        }
    }

    public static Timestamp readSqlTimestamp(FieldSet fieldSet, String column) {
        try {
            String value = fieldSet.readString(column);
            return Timestamp.valueOf(value);
        } catch (IllegalArgumentException e) {
            return null;
        }
    }

    public static void main(String[] args) throws ParseException {
        // Create a FieldSet instance for testing
        String[] tokens = {"101", "John", "10000.50", "true", "2022-01-01", "12:00:00", "2022-01-01 12:00:00"};
        String[] names = {"id", "name", "salary", "active", "birthdate", "appointmentTime", "timestamp"};

        FieldSet fieldSet = new DefaultFieldSet(tokens, names);

        // Test readValue method
        System.out.println("Integer: " + readValue(fieldSet, "id"));
        System.out.println("Double: " + readValue(fieldSet, "salary"));
        System.out.println("Boolean: " + readValue(fieldSet, "active"));
        System.out.println("String: " + readValue(fieldSet, "name"));
        System.out.println("Date: " + readValue(fieldSet, "birthdate"));
        System.out.println("Time: " + readValue(fieldSet, "appointmentTime"));
        System.out.println("Timestamp: " + readValue(fieldSet, "timestamp"));
    }
}
