@Bean
public Step steps(
    JobRepository jobRepository,
    DataSourceTransactionManager transactionManager,
    ItemReader<Map<String, Object>> reader,
    ItemProcessor<Map<String, Object>, Map<String, Object>> itemProcessor,
    ItemWriter<Map<String, Object>> writer,
    TaskExecutor taskExecutor
) throws Exception {
    return new StepBuilder("jobStep", jobRepository)
        .<Map<String, Object>, Map<String, Object>>chunk(1, transactionManager)
        .reader(reader)
        .processor(itemProcessor)
        .writer(writer)
        .taskExecutor(taskExecutor)
        .faultTolerant()
        .skip(FlatFileParseException.class)
        .skipLimit(1)
        .listener(new SkipListener<Map<String, Object>, Map<String, Object>>() {
            @Override
            public void onSkipInRead(Throwable t) {
                System.out.println("Skipped in read: " + t.getMessage());
            }

            @Override
            public void onSkipInWrite(Map<String, Object> item, Throwable t) {
                System.out.println("Skipped in write: " + item + ", due to: " + t.getMessage());
            }

            @Override
            public void onSkipInProcess(Map<String, Object> item, Throwable t) {
                System.out.println("Skipped in process: " + item + ", due to: " + t.getMessage());
            }
        })
        .build();
}

