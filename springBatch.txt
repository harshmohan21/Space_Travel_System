import org.springframework.batch.item.file.transform.FieldSet;

import java.sql.Time;
import java.sql.Timestamp;

public class BatchConfiguration {

    private Object readValue(FieldSet fieldSet, String column, String columnType) {
        try {
            switch (columnType.toLowerCase()) { // Convert columnType to lowercase for case-insensitive comparison
                case "integer":
                    return fieldSet.readInt(column);
                case "double":
                    return fieldSet.readDouble(column);
                case "boolean":
                    return parseBoolean(fieldSet.readString(column));
                case "date":
                    return fieldSet.readDate(column);
                case "time":
                    return Time.valueOf(fieldSet.readString(column));
                case "timestamp":
                    return Timestamp.valueOf(fieldSet.readString(column));
                case "string":
                default:
                    return fieldSet.readString(column);
            }
        } catch (Exception e) {
            throw new RuntimeException("Failed to read value for column: " + column + ", expected type: " + columnType, e);
        }
    }

    private Boolean parseBoolean(String value) {
        if (value == null) {
            return null;
        }

        switch (value.trim().toLowerCase()) {
            case "true":
            case "yes":
            case "y":
            case "1":
                return true;
            case "false":
            case "no":
            case "n":
            case "0":
                return false;
            default:
                throw new IllegalArgumentException("Invalid boolean value: " + value);
        }
    }

    // Other methods and beans for your batch configuration
}
